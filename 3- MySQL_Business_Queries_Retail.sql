-- Sales Performance
-- Question 1: Which products generated the highest total revenue?
SELECT 
    t.product_id,
    p.description_en AS product_name,
    ROUND(SUM(t.quantity * t.unit_price * (1 - t.discount)), 2) AS total_revenue,
    SUM(t.quantity) AS total_units_sold
FROM 
    transactions_cleaned t
JOIN 
    products_cleaned p ON t.product_id = p.product_id
GROUP BY 
    t.product_id, p.description_en
ORDER BY 
    total_revenue DESC
LIMIT 5;

-- Question 2: Which categories and sub-categories are most profitable?
SELECT 
    p.category,
    p.sub_category,
    ROUND(SUM(t.quantity * t.unit_price * (1 - t.discount)), 2) AS total_revenue,
    SUM(t.quantity) AS total_units_sold
FROM 
    transactions_cleaned t
JOIN 
    products_cleaned p ON t.product_id = p.product_id
GROUP BY 
    p.category, p.sub_category
ORDER BY 
    total_revenue DESC
LIMIT 10;

-- Question 3: What are the monthly revenue trends?
SELECT 
    YEAR(t.date) AS year,
    MONTH(t.date) AS month,
    ROUND(SUM(t.quantity * t.unit_price * (1 - t.discount)), 2) AS monthly_revenue
FROM 
    transactions_cleaned t
GROUP BY 
    YEAR(t.date), MONTH(t.date)
ORDER BY 
    year, month;


-- Geography & Stores
-- Question 4: What is the total revenue generated by each global region?
SELECT 
    CASE 
        WHEN s.country = '中国' THEN 'Asia'
        WHEN s.country = 'United States' THEN 'North America'
        WHEN s.country IN ('Deutschland', 'France', 'United Kingdom', 'Portugal', 'España') THEN 'Europe'
        ELSE 'Other'
    END AS region,
    ROUND(SUM(t.quantity * t.unit_price * (1 - t.discount)), 2) AS total_revenue
FROM 
    transactions_cleaned t
JOIN 
    stores_cleaned s ON t.store_id = s.store_id
GROUP BY 
    region
ORDER BY 
    total_revenue DESC;

-- Question 5: Which countries/cities generate the most customers or orders? (standardize '中国' to 'China')
SELECT 
    CASE 
        WHEN country = '中国' THEN 'China'
        ELSE country
    END AS country,
    city,
    COUNT(DISTINCT customer_id) AS unique_customers
FROM 
    customers_cleaned
GROUP BY 
    country, city
ORDER BY 
    unique_customers DESC
LIMIT 10;


-- Customer Analysis
-- Question 6: What is the distribution of customers by gender, country, and job title? (standardize '中国' to 'China')
SELECT 
    CASE 
        WHEN country = '中国' THEN 'China'
        ELSE country
    END AS country,
    gender,
    job_titles,
    COUNT(*) AS customer_count
FROM 
    customers_cleaned
GROUP BY 
    country, gender, job_titles
ORDER BY 
    customer_count DESC
LIMIT 10;

-- Question 7: What age groups are spending the most?
SELECT 
    CASE 
        WHEN YEAR(CURDATE()) - YEAR(c.date_of_birth) < 18 THEN 'Under 18'
        WHEN YEAR(CURDATE()) - YEAR(c.date_of_birth) BETWEEN 18 AND 24 THEN '18-24'
        WHEN YEAR(CURDATE()) - YEAR(c.date_of_birth) BETWEEN 25 AND 34 THEN '25-34'
        WHEN YEAR(CURDATE()) - YEAR(c.date_of_birth) BETWEEN 35 AND 44 THEN '35-44'
        WHEN YEAR(CURDATE()) - YEAR(c.date_of_birth) BETWEEN 45 AND 54 THEN '45-54'
        WHEN YEAR(CURDATE()) - YEAR(c.date_of_birth) BETWEEN 55 AND 64 THEN '55-64'
        ELSE '65+'
    END AS age_group,
    ROUND(SUM(t.quantity * t.unit_price * (1 - t.discount)), 2) AS total_revenue
FROM 
    customers_cleaned c
JOIN 
    transactions_cleaned t ON c.customer_id = t.customer_id
GROUP BY 
    age_group
ORDER BY 
    total_revenue DESC;


-- Employee & Store Impact
-- Question 8: Which employees are involved in the most transactions?
SELECT 
    e.name AS employee_name,
    e.position,
    COUNT(t.invoice_id) AS total_transactions,
    ROUND(SUM(t.quantity * t.unit_price * (1 - t.discount)), 2) AS total_revenue
FROM 
    transactions_cleaned t
JOIN 
    employees_cleaned e ON t.employee_id = e.employee_id
GROUP BY 
    e.name, e.position
ORDER BY 
    total_transactions DESC
LIMIT 5;

-- Question 9: What is the average number of employees per store and how does it relate to sales volume? (with pre-aggregated sales + standardize '中国' to 'China')
WITH store_sales AS (
    SELECT 
        store_id,
        ROUND(SUM(quantity * unit_price * (1 - discount)), 2) AS total_revenue
    FROM 
        transactions_cleaned
    GROUP BY 
        store_id
)
SELECT 
    s.store_id,
    s.store_name,
    s.city,
    CASE 
        WHEN s.country = '中国' THEN 'China'
        ELSE s.country
    END AS country,
    COUNT(DISTINCT e.employee_id) AS num_employees,
    COALESCE(MAX(ss.total_revenue), 0) AS total_revenue
FROM 
    stores_cleaned s
LEFT JOIN 
    employees_cleaned e ON s.store_id = e.store_id
LEFT JOIN 
    store_sales ss ON s.store_id = ss.store_id
GROUP BY 
    s.store_id, s.store_name, s.city, country
ORDER BY 
    total_revenue DESC;


-- Discounts & Promotions
-- Question 10: What is the impact of discounts on sales volume across different categories?
SELECT 
    p.category,
    ROUND(t.discount, 2) AS discount_rate,
    COUNT(*) AS transactions_count
FROM 
    transactions_cleaned t
JOIN 
    products_cleaned p ON t.product_id = p.product_id
WHERE 
    t.discount > 0 -- exclude transactions with no discount
GROUP BY 
    p.category, discount_rate
ORDER BY 
    p.category, discount_rate;

